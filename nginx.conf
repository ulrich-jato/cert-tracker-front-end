events {
    worker_connections 1024;
}

http {
    include mime.types;
    sendfile on;

    server {
        listen 8080;
        listen [::]:8080;

        resolver 127.0.0.1;
        autoindex off;

        server_name _;
        server_tokens off;

        root /app/static;
        gzip_static on;
    }
}
# events {
#     worker_connections 1024;
# }

# http {
#     include mime.types;
#     sendfile on;

#     server {
#         listen 8080;           # Use port 80 for HTTP
#         listen [::]:8080;

#         resolver 127.0.0.11;  # Docker DNS resolver address
#         autoindex off;

#         server_name _;
#         server_tokens off;

#         root /app/static;
#         gzip_static on;

#         location /api/ {
#             add_header 'Access-Control-Allow-Origin' 'http://localhost:80';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
#             add_header 'Access-Control-Allow-Credentials' 'true';
#             if ($request_method = 'OPTIONS') {
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain; charset=utf-8';
#                 add_header 'Content-Length' 0;
#                 return 204;
#             }

#             proxy_pass http://localhost:8080;  # Adjust the target to your front-end container
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }
